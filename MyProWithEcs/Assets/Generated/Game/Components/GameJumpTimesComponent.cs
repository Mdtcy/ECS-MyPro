//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public JumpTimesComponent jumpTimes { get { return (JumpTimesComponent)GetComponent(GameComponentsLookup.JumpTimes); } }
    public bool hasJumpTimes { get { return HasComponent(GameComponentsLookup.JumpTimes); } }

    public void AddJumpTimes(int newMaxJumpTimes, int newJumpTimes) {
        var index = GameComponentsLookup.JumpTimes;
        var component = (JumpTimesComponent)CreateComponent(index, typeof(JumpTimesComponent));
        component.MaxJumpTimes = newMaxJumpTimes;
        component.JumpTimes = newJumpTimes;
        AddComponent(index, component);
    }

    public void ReplaceJumpTimes(int newMaxJumpTimes, int newJumpTimes) {
        var index = GameComponentsLookup.JumpTimes;
        var component = (JumpTimesComponent)CreateComponent(index, typeof(JumpTimesComponent));
        component.MaxJumpTimes = newMaxJumpTimes;
        component.JumpTimes = newJumpTimes;
        ReplaceComponent(index, component);
    }

    public void RemoveJumpTimes() {
        RemoveComponent(GameComponentsLookup.JumpTimes);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherJumpTimes;

    public static Entitas.IMatcher<GameEntity> JumpTimes {
        get {
            if (_matcherJumpTimes == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.JumpTimes);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherJumpTimes = matcher;
            }

            return _matcherJumpTimes;
        }
    }
}
