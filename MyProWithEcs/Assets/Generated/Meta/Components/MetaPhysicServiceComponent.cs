//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity physicServiceEntity { get { return GetGroup(MetaMatcher.PhysicService).GetSingleEntity(); } }
    public PhysicServiceComponent physicService { get { return physicServiceEntity.physicService; } }
    public bool hasPhysicService { get { return physicServiceEntity != null; } }

    public MetaEntity SetPhysicService(IPhysicService newPhysicService) {
        if (hasPhysicService) {
            throw new Entitas.EntitasException("Could not set PhysicService!\n" + this + " already has an entity with PhysicServiceComponent!",
                "You should check if the context already has a physicServiceEntity before setting it or use context.ReplacePhysicService().");
        }
        var entity = CreateEntity();
        entity.AddPhysicService(newPhysicService);
        return entity;
    }

    public void ReplacePhysicService(IPhysicService newPhysicService) {
        var entity = physicServiceEntity;
        if (entity == null) {
            entity = SetPhysicService(newPhysicService);
        } else {
            entity.ReplacePhysicService(newPhysicService);
        }
    }

    public void RemovePhysicService() {
        physicServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public PhysicServiceComponent physicService { get { return (PhysicServiceComponent)GetComponent(MetaComponentsLookup.PhysicService); } }
    public bool hasPhysicService { get { return HasComponent(MetaComponentsLookup.PhysicService); } }

    public void AddPhysicService(IPhysicService newPhysicService) {
        var index = MetaComponentsLookup.PhysicService;
        var component = (PhysicServiceComponent)CreateComponent(index, typeof(PhysicServiceComponent));
        component.PhysicService = newPhysicService;
        AddComponent(index, component);
    }

    public void ReplacePhysicService(IPhysicService newPhysicService) {
        var index = MetaComponentsLookup.PhysicService;
        var component = (PhysicServiceComponent)CreateComponent(index, typeof(PhysicServiceComponent));
        component.PhysicService = newPhysicService;
        ReplaceComponent(index, component);
    }

    public void RemovePhysicService() {
        RemoveComponent(MetaComponentsLookup.PhysicService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherPhysicService;

    public static Entitas.IMatcher<MetaEntity> PhysicService {
        get {
            if (_matcherPhysicService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.PhysicService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherPhysicService = matcher;
            }

            return _matcherPhysicService;
        }
    }
}
